apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: argocd-task-sync-and-wait
  namespace: ibtech-devops
spec:
  description: >-
    This task syncs (deploys) an Argo CD application and waits for it to be
    healthy.

    To do so, it requires the address of the Argo CD server and some form of
    authentication either a username/password or an authentication token.
  params:
    - description: name of the application to sync
      name: application-name
      type: string
    - default: HEAD
      description: the revision to sync to
      name: revision
      type: string
    - default: '--'
      name: flags
      type: string
    - default: v2.0.0
      name: argocd-version
      type: string
  stepTemplate:
    envFrom:
      - configMapRef:
          name: argocd-env-configmap
      - secretRef:
          name: argocd-env-secret
    name: ''
    resources: {}
  steps:
    - image: 'quay.io/swoturkey/argocd:$(params.argocd-version)'
      name: login
      resources: {}
      script: |
        if [ -z $ARGOCD_AUTH_TOKEN ]; then
          yes | argocd login $(params.flags) --grpc-web $ARGOCD_SERVER --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD;
        fi
    - image: 'quay.io/swoturkey/argocd:$(params.argocd-version)'
      name: sync
      resources: {}
      script: >
        argocd app sync $(params.application-name) --revision $(params.revision)
        $(params.flags)
    - image: 'quay.io/swoturkey/argocd:$(params.argocd-version)'
      name: wait
      resources: {}
      script: |
        argocd app wait $(params.application-name) --health $(params.flags)
    - image: 'quay.io/swoturkey/argocd:$(params.argocd-version)'
      name: deploymentrollout
      resources: {}
      script: >
        argocd app actions run $(params.application-name) restart --kind Deployment